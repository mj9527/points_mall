// Code generated by protoc-gen-go. DO NOT EDIT.
// source: points_mall.proto

package points_mall

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PayCoinReq struct {
	Time                 string   `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	AppId                string   `protobuf:"bytes,2,opt,name=appId,proto3" json:"appId,omitempty"`
	Sign                 string   `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty"`
	OrderNo              string   `protobuf:"bytes,4,opt,name=orderNo,proto3" json:"orderNo,omitempty"`
	Account              string   `protobuf:"bytes,5,opt,name=account,proto3" json:"account,omitempty"`
	Type                 string   `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PayCoinReq) Reset()         { *m = PayCoinReq{} }
func (m *PayCoinReq) String() string { return proto.CompactTextString(m) }
func (*PayCoinReq) ProtoMessage()    {}
func (*PayCoinReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c75ba8dc07a9bf, []int{0}
}

func (m *PayCoinReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayCoinReq.Unmarshal(m, b)
}
func (m *PayCoinReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayCoinReq.Marshal(b, m, deterministic)
}
func (m *PayCoinReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayCoinReq.Merge(m, src)
}
func (m *PayCoinReq) XXX_Size() int {
	return xxx_messageInfo_PayCoinReq.Size(m)
}
func (m *PayCoinReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PayCoinReq.DiscardUnknown(m)
}

var xxx_messageInfo_PayCoinReq proto.InternalMessageInfo

func (m *PayCoinReq) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *PayCoinReq) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *PayCoinReq) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *PayCoinReq) GetOrderNo() string {
	if m != nil {
		return m.OrderNo
	}
	return ""
}

func (m *PayCoinReq) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *PayCoinReq) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type PayCoinRsp struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PayCoinRsp) Reset()         { *m = PayCoinRsp{} }
func (m *PayCoinRsp) String() string { return proto.CompactTextString(m) }
func (*PayCoinRsp) ProtoMessage()    {}
func (*PayCoinRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c75ba8dc07a9bf, []int{1}
}

func (m *PayCoinRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayCoinRsp.Unmarshal(m, b)
}
func (m *PayCoinRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayCoinRsp.Marshal(b, m, deterministic)
}
func (m *PayCoinRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayCoinRsp.Merge(m, src)
}
func (m *PayCoinRsp) XXX_Size() int {
	return xxx_messageInfo_PayCoinRsp.Size(m)
}
func (m *PayCoinRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_PayCoinRsp.DiscardUnknown(m)
}

var xxx_messageInfo_PayCoinRsp proto.InternalMessageInfo

func (m *PayCoinRsp) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *PayCoinRsp) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*PayCoinReq)(nil), "points_mall.PayCoinReq")
	proto.RegisterType((*PayCoinRsp)(nil), "points_mall.PayCoinRsp")
}

func init() { proto.RegisterFile("points_mall.proto", fileDescriptor_f7c75ba8dc07a9bf) }

var fileDescriptor_f7c75ba8dc07a9bf = []byte{
	// 242 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x50, 0xcd, 0x4a, 0xc4, 0x30,
	0x10, 0xb6, 0xee, 0xb6, 0xcb, 0x8e, 0x17, 0x1d, 0x44, 0x83, 0x20, 0x4a, 0x4f, 0x9e, 0xba, 0xb0,
	0xa2, 0xe2, 0xc1, 0x8b, 0x9e, 0x14, 0x94, 0xa5, 0x47, 0x2f, 0x92, 0xed, 0x86, 0x1a, 0x49, 0x9a,
	0xb1, 0x49, 0x0f, 0x7d, 0x0d, 0x9f, 0x58, 0x92, 0x46, 0xda, 0x83, 0xb7, 0xef, 0x8f, 0x99, 0x6f,
	0x06, 0x8e, 0xc8, 0xc8, 0xc6, 0xd9, 0x0f, 0xcd, 0x95, 0x2a, 0xa8, 0x35, 0xce, 0xe0, 0xc1, 0x44,
	0xca, 0x7f, 0x12, 0x80, 0x0d, 0xef, 0x9f, 0x8c, 0x6c, 0x4a, 0xf1, 0x8d, 0x08, 0x73, 0x27, 0xb5,
	0x60, 0xc9, 0x65, 0x72, 0xb5, 0x2c, 0x03, 0xc6, 0x63, 0x48, 0x39, 0xd1, 0xf3, 0x8e, 0xed, 0x07,
	0x71, 0x20, 0x3e, 0x69, 0x65, 0xdd, 0xb0, 0xd9, 0x90, 0xf4, 0x18, 0x19, 0x2c, 0x4c, 0xbb, 0x13,
	0xed, 0x9b, 0x61, 0xf3, 0x20, 0xff, 0x51, 0xef, 0xf0, 0xaa, 0x32, 0x5d, 0xe3, 0x58, 0x3a, 0x38,
	0x91, 0x86, 0x8d, 0x3d, 0x09, 0x96, 0xc5, 0x8d, 0x3d, 0x89, 0xfc, 0x76, 0xec, 0x64, 0x09, 0x4f,
	0x20, 0x6b, 0x85, 0xed, 0x94, 0x0b, 0xad, 0xd2, 0x32, 0x32, 0x3c, 0x84, 0x99, 0xb6, 0x75, 0x6c,
	0xe5, 0xe1, 0xfa, 0x05, 0x96, 0x1b, 0x7f, 0xdb, 0x2b, 0x57, 0x0a, 0x1f, 0x60, 0x11, 0x87, 0xe0,
	0x69, 0x31, 0xfd, 0xc2, 0x78, 0xee, 0xd9, 0xff, 0x86, 0xa5, 0x7c, 0xef, 0xf1, 0xe2, 0xfd, 0xbc,
	0x96, 0xee, 0xb3, 0xdb, 0x16, 0x95, 0xd1, 0x2b, 0xfd, 0x75, 0x7f, 0xb3, 0xbe, 0x5b, 0x4d, 0xd2,
	0xdb, 0x2c, 0x7c, 0xf3, 0xfa, 0x37, 0x00, 0x00, 0xff, 0xff, 0x30, 0x1a, 0xa2, 0x72, 0x62, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PointMallClient is the client API for PointMall service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PointMallClient interface {
	PayCoin(ctx context.Context, in *PayCoinReq, opts ...grpc.CallOption) (*PayCoinRsp, error)
}

type pointMallClient struct {
	cc *grpc.ClientConn
}

func NewPointMallClient(cc *grpc.ClientConn) PointMallClient {
	return &pointMallClient{cc}
}

func (c *pointMallClient) PayCoin(ctx context.Context, in *PayCoinReq, opts ...grpc.CallOption) (*PayCoinRsp, error) {
	out := new(PayCoinRsp)
	err := c.cc.Invoke(ctx, "/points_mall.PointMall/PayCoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PointMallServer is the server API for PointMall service.
type PointMallServer interface {
	PayCoin(context.Context, *PayCoinReq) (*PayCoinRsp, error)
}

// UnimplementedPointMallServer can be embedded to have forward compatible implementations.
type UnimplementedPointMallServer struct {
}

func (*UnimplementedPointMallServer) PayCoin(ctx context.Context, req *PayCoinReq) (*PayCoinRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PayCoin not implemented")
}

func RegisterPointMallServer(s *grpc.Server, srv PointMallServer) {
	s.RegisterService(&_PointMall_serviceDesc, srv)
}

func _PointMall_PayCoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayCoinReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointMallServer).PayCoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/points_mall.PointMall/PayCoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointMallServer).PayCoin(ctx, req.(*PayCoinReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PointMall_serviceDesc = grpc.ServiceDesc{
	ServiceName: "points_mall.PointMall",
	HandlerType: (*PointMallServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PayCoin",
			Handler:    _PointMall_PayCoin_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "points_mall.proto",
}
